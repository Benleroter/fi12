# Generated by Django 3.0 on 2021-10-12 13:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Fungi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CommonName', models.CharField(blank=True, max_length=255, null=True)),
                ('LatinName', models.CharField(max_length=255)),
                ('BMSList', models.CharField(blank=True, default='BMS', max_length=8, null=True)),
                ('NBNList', models.CharField(blank=True, default='NBN', max_length=8, null=True)),
                ('GenusEnglish', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('GenusLatin', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('UKSpecies', models.CharField(blank=True, default='NoData', max_length=8, null=True)),
                ('Macromycetes', models.CharField(blank=True, default='NoData', max_length=8, null=True)),
                ('Group', models.CharField(blank=True, default='not assigned', max_length=255, null=True)),
                ('Comments', models.CharField(blank=True, default='NoData', max_length=1024, null=True)),
            ],
            options={
                'verbose_name': 'Fungi',
                'verbose_name_plural': 'Fungi',
                'db_table': 'Fungi',
                'ordering': ['CommonName'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Stipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Colour', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('BruiseColour', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('CutColour', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('LengthMin', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=4, null=True)),
                ('LengthMax', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=4, null=True)),
                ('ThicknessMin', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=4, null=True)),
                ('ThicknessMax', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=4, null=True)),
                ('ShapeDescription', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('ReticulationPresent', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('ReticulationColour', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('ReticulationDescription', models.CharField(blank=True, default='NoData', max_length=2048, null=True)),
                ('Base', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('BaseDescription', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Texture', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('TextureDescription', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Ring', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('RingDescription', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Volva', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Comments', models.CharField(blank=True, default='no comments', max_length=2048, null=True)),
                ('Fungi', models.ForeignKey(max_length=255, on_delete=django.db.models.deletion.CASCADE, related_name='fungi_Stipe', to='fungi.Fungi')),
            ],
            options={
                'verbose_name': 'Stipe',
                'verbose_name_plural': 'Stipes',
                'db_table': 'Stipe',
                'ordering': ['Fungi'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StatusData', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('WhereFound', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('RecordedInUK', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('UKOccurences', models.CharField(blank=True, default='0', max_length=16, null=True)),
                ('StatusComments', models.CharField(blank=True, default='no comments', max_length=2048, null=True)),
                ('Fungi', models.ForeignKey(max_length=255, on_delete=django.db.models.deletion.CASCADE, related_name='fungi_Status', to='fungi.Fungi')),
            ],
            options={
                'verbose_name': 'Status',
                'verbose_name_plural': 'Status',
                'db_table': 'Status',
                'ordering': ['Fungi'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Spores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Colour', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Comments', models.CharField(blank=True, default='no comments', max_length=2048, null=True)),
                ('Fungi', models.ForeignKey(max_length=255, on_delete=django.db.models.deletion.CASCADE, related_name='fungi_spores', to='fungi.Fungi')),
            ],
            options={
                'verbose_name': 'Spores',
                'verbose_name_plural': 'Spores',
                'db_table': 'Spores',
                'ordering': ['Fungi'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SimilarFungi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SimilarFungiName', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Fungi', models.ForeignKey(max_length=255, on_delete=django.db.models.deletion.CASCADE, related_name='fungi_similar', to='fungi.Fungi')),
            ],
            options={
                'verbose_name': 'SimilarFungi',
                'verbose_name_plural': 'SimilarFungi',
                'db_table': 'SimilarFungi',
                'ordering': ['Fungi'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Seasons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Season', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Comments', models.CharField(blank=True, default='no comments', max_length=2048, null=True)),
                ('Fungi', models.ForeignKey(max_length=255, on_delete=django.db.models.deletion.CASCADE, related_name='fungi_seasons', to='fungi.Fungi')),
            ],
            options={
                'verbose_name': 'Seasons',
                'verbose_name_plural': 'Seasons',
                'db_table': 'Seasons',
                'ordering': ['Fungi'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PoresAndTubes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PoresPresent', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('PoreColour', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('PoreShape', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('PoreBruiseColour', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('TubeColour', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('TubeShape', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('TubeBruiseColour', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Milk', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Comments', models.CharField(blank=True, default='no comments', max_length=2048, null=True)),
                ('Fungi', models.ForeignKey(max_length=255, on_delete=django.db.models.deletion.CASCADE, related_name='fungi_pores', to='fungi.Fungi')),
            ],
            options={
                'verbose_name': 'Pores and Tubes',
                'verbose_name_plural': 'Pores and Tubes',
                'db_table': 'PoresAndTubes',
                'ordering': ['Fungi'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='default.jpg', upload_to='images')),
                ('Fungi', models.ForeignKey(max_length=255, on_delete=django.db.models.deletion.CASCADE, related_name='fungi_picture', to='fungi.Fungi')),
            ],
            options={
                'verbose_name': 'Picture',
                'verbose_name_plural': 'Pictures',
                'db_table': 'Pictures',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OtherCommonNames',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AltCommonName', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Fungi', models.ForeignKey(max_length=255, on_delete=django.db.models.deletion.CASCADE, related_name='fungi_commonname', to='fungi.Fungi')),
            ],
            options={
                'verbose_name': 'Other Common Name',
                'verbose_name_plural': 'Other Common Names',
                'db_table': 'OtherCommonNames',
                'ordering': ['Fungi'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='NetLinks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Website', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Websiteurl', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('OrderToDisplay', models.IntegerField(blank=True, default=50, null=True)),
                ('Fungi', models.ForeignKey(max_length=255, on_delete=django.db.models.deletion.CASCADE, related_name='fungi_netlinks', to='fungi.Fungi')),
            ],
            options={
                'verbose_name': 'NetLinks',
                'verbose_name_plural': 'NetLinks',
                'db_table': 'NetLinks',
                'ordering': ['Website'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LatinSynonyms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LatinSynonym', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Fungi', models.ForeignKey(max_length=255, on_delete=django.db.models.deletion.CASCADE, related_name='fungi_latinnname', to='fungi.Fungi')),
            ],
            options={
                'verbose_name': 'Latin Synonym',
                'verbose_name_plural': 'Latin Synonyms',
                'db_table': 'LatinSynonyms',
                'ordering': ['Fungi'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Habitat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Associations', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Ph', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Soil', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Substrate', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Comments', models.CharField(blank=True, default='no comments', max_length=2048, null=True)),
                ('Fungi', models.ForeignKey(max_length=255, on_delete=django.db.models.deletion.CASCADE, related_name='fungi_habitat', to='fungi.Fungi')),
            ],
            options={
                'verbose_name': 'Habitat',
                'verbose_name_plural': 'Habitats',
                'db_table': 'Habitat',
                'ordering': ['Fungi'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Gills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('GillsPresent', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Colour', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('BruiseColour', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('CutColour', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Attachment', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Arrangement', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Milk', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Comments', models.CharField(blank=True, default='no comments', max_length=2048, null=True)),
                ('Fungi', models.ForeignKey(max_length=255, on_delete=django.db.models.deletion.CASCADE, related_name='fungi_gills', to='fungi.Fungi')),
            ],
            options={
                'verbose_name': 'Gills',
                'verbose_name_plural': 'Gills',
                'db_table': 'Gills',
                'ordering': ['Fungi'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FungiComments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Comments', models.CharField(blank=True, default='no comments', max_length=2048, null=True)),
                ('Fungi', models.ForeignKey(max_length=255, on_delete=django.db.models.deletion.CASCADE, related_name='fungi_comments', to='fungi.Fungi')),
            ],
            options={
                'db_table': 'FungiComments',
                'ordering': ['Fungi'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FruitingBody',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DataPresent', models.BooleanField(default=False)),
                ('Colour', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('ColourDescription', models.CharField(blank=True, default='NoData', max_length=1028, null=True)),
                ('ShapeDescription', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Rim', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('RimDescription', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('CapTexture', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('CapTextureDescription', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('BruiseColour', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('CutColour', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('WidthMin', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=4, null=True)),
                ('WidthMax', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=4, null=True)),
                ('Comments', models.CharField(blank=True, default='no comments', max_length=2048, null=True)),
                ('Fungi', models.ForeignKey(max_length=255, on_delete=django.db.models.deletion.CASCADE, related_name='fungi_fruitingbody', to='fungi.Fungi')),
            ],
            options={
                'verbose_name': 'FruitingBody',
                'verbose_name_plural': 'FruitingBodies',
                'db_table': 'FruitingBody',
                'ordering': ['Fungi'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Flesh',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FleshCapColour', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('FleshCapBruiseColour', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('FleshCapCutColour', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('FleshStipeColour', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('FleshStipeBruiseColour', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('FleshStipeCutColour', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Comments', models.CharField(blank=True, default='no comments', max_length=2048, null=True)),
                ('Fungi', models.ForeignKey(max_length=255, on_delete=django.db.models.deletion.CASCADE, related_name='fungi_flesh', to='fungi.Fungi')),
            ],
            options={
                'verbose_name': 'Flesh',
                'verbose_name_plural': 'Flesh',
                'db_table': 'Flesh',
                'ordering': ['Fungi'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DetailSources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Source', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Detail', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Fungi', models.ForeignKey(max_length=255, on_delete=django.db.models.deletion.CASCADE, related_name='fungi_detail_sources', to='fungi.Fungi')),
            ],
            options={
                'verbose_name': 'DetailSources',
                'verbose_name_plural': 'DetailSources',
                'db_table': 'DetailSource',
                'ordering': ['Fungi'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Cuisine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PoisonType', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('CulinaryRating', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Odour', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Taste', models.CharField(blank=True, default='NoData', max_length=255, null=True)),
                ('Comments', models.CharField(blank=True, default='no comments', max_length=2048, null=True)),
                ('Fungi', models.ForeignKey(max_length=255, on_delete=django.db.models.deletion.CASCADE, related_name='fungi_cuisine', to='fungi.Fungi')),
            ],
            options={
                'verbose_name': 'Cuisine',
                'verbose_name_plural': 'Cuisine',
                'db_table': 'Cuisine',
                'ordering': ['Fungi'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Classification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Kingdom', models.CharField(default='NoData', max_length=255)),
                ('Phyum', models.CharField(default='NoData', max_length=255)),
                ('SubPhyum', models.CharField(default='NoData', max_length=255)),
                ('Class', models.CharField(default='NoData', max_length=255)),
                ('SubClass', models.CharField(default='NoData', max_length=255)),
                ('Order', models.CharField(default='NoData', max_length=255)),
                ('Family', models.CharField(default='NoData', max_length=255)),
                ('Genus', models.CharField(default='NoData', max_length=255)),
                ('Source', models.CharField(default='NoData', max_length=255)),
                ('Fungi', models.ForeignKey(max_length=255, on_delete=django.db.models.deletion.CASCADE, related_name='fungi_taxonomy', to='fungi.Fungi')),
            ],
            options={
                'verbose_name': 'Classification',
                'verbose_name_plural': 'Classification',
                'db_table': 'Classification',
                'ordering': ['Fungi'],
                'managed': True,
            },
        ),
    ]
